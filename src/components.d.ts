/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AppRoot {}
  interface GameBoard {
    'isPlayersTurn': boolean;
    'playOpponent': (column: number) => Promise<void>;
    'reset': () => Promise<void>;
  }
  interface GameCell {
    'player': number;
  }
}

declare global {


  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  const HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLGameBoardElement extends Components.GameBoard, HTMLStencilElement {}
  const HTMLGameBoardElement: {
    prototype: HTMLGameBoardElement;
    new (): HTMLGameBoardElement;
  };

  interface HTMLGameCellElement extends Components.GameCell, HTMLStencilElement {}
  const HTMLGameCellElement: {
    prototype: HTMLGameCellElement;
    new (): HTMLGameCellElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'game-board': HTMLGameBoardElement;
    'game-cell': HTMLGameCellElement;
  }
}

declare namespace LocalJSX {
  interface AppRoot {}
  interface GameBoard {
    'isPlayersTurn'?: boolean;
    'onOpponentMove'?: (event: CustomEvent<any>) => void;
    'onPlayerMove'?: (event: CustomEvent<any>) => void;
  }
  interface GameCell {
    'player'?: number;
  }

  interface IntrinsicElements {
    'app-root': AppRoot;
    'game-board': GameBoard;
    'game-cell': GameCell;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'game-board': LocalJSX.GameBoard & JSXBase.HTMLAttributes<HTMLGameBoardElement>;
      'game-cell': LocalJSX.GameCell & JSXBase.HTMLAttributes<HTMLGameCellElement>;
    }
  }
}


